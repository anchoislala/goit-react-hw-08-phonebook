{"version":3,"file":"static/js/240.c15babd1.chunk.js","mappings":"+LAEe,SAASA,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SAC9B,OACE,SAAC,IAAD,CACEC,GAAI,CACFC,QAAS,OACTC,QAAS,EACTC,UAAW,SACXC,OAAQ,OACRC,UAAW,EACXC,eAAgB,SAChBC,WAAY,SACZC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,eACjBC,aAAc,EACd,UAAW,CACTD,gBAAiB,WAdvB,SAkBGX,GAGN,C,qICvBYa,EAAOC,EAAAA,EAAAA,KAAH,yGAMJC,EAAaD,EAAAA,EAAAA,GAAH,8EAMVE,EAAQF,EAAAA,EAAAA,GAAH,sF,sJCuDlB,GAvDkBG,E,QAAAA,K,8BCHH,SAASC,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACpC,OAAQD,GACJ,IAAK,QACD,OAAOL,EAASM,GACpB,IAAK,WACD,OAAOJ,EAAYI,GACvB,QACI,OAEX,EASD,OAEI,UAAC,EAAD,YAEI,SAACC,EAAA,EAAD,WACI,6CAGJ,SAACC,EAAA,EAAD,WAEI,UAAC,KAAD,CAAMC,SAjBG,SAAAC,GACjBA,EAAEC,iBACFf,EAASgB,EAAAA,GAAAA,MAAqB,CAAEb,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,GACf,EAYyCW,aAAa,MAA3C,WAEI,UAAC,KAAD,YACI,SAAC,KAAD,WACI,SAACC,EAAA,EAAD,CAAWC,QAAQ,WAAWC,MAAM,QAAQC,KAAK,QAAQZ,KAAK,QAAQC,MAAOP,EAAOmB,SAAUf,OAElG,SAAC,KAAD,WACI,SAACW,EAAA,EAAD,CAAWC,QAAQ,WAAWC,MAAM,WAAWC,KAAK,WAAWZ,KAAK,WAAWC,MAAOL,EAAUiB,SAAUf,UAIlH,SAACgB,EAAA,EAAD,CAAQF,KAAK,SAASF,QAAQ,YAAYK,WAAW,SAACC,EAAA,EAAD,IAArD,0BASnB,C","sources":["components/Box/Box.js","components/FormStyle/FormStyle.styled.js","../node_modules/@mui/system/esm/Container/Container.js","pages/LoginForm.js"],"sourcesContent":["import Box from '@mui/material/Box';\n\nexport default function BoxSx({ children }) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        padding: 5,\n        textAlign: 'center',\n        margin: 'auto',\n        marginTop: 5,\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 500,\n        height: 300,\n        backgroundColor: 'primary.dark',\n        borderRadius: 8,\n        '&:hover': {\n          backgroundColor: 'yellow',\n        },\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n`;\n\nexport const InputsList = styled.ul`\nlist-style: none;\npadding: 0;\nmargin-bottom: 15px;\n`;\n\nexport const Input = styled.li`\n    &:not(:last-child) {\n        margin-bottom: 15px;\n    }\n`;\n\n","import PropTypes from 'prop-types';\nimport createContainer from './createContainer';\n/**\n *\n * Demos:\n *\n * - [Container (Material UI)](https://mui.com/material-ui/react-container/)\n * - [Container (MUI System)](https://mui.com/system/react-container/)\n *\n * API:\n *\n * - [Container API](https://mui.com/system/api/container/)\n */\n\nconst Container = createContainer();\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\nimport { authOperations } from \"redux/auth\"; \nimport { TextField, Button } from \"@mui/material\";\nimport LoginIcon from '@mui/icons-material/Login';\nimport { Container } from \"@mui/system\";\nimport BoxSx from \"components/Box/Box\";\nimport { Form, InputsList, Input } from \"components/FormStyle/FormStyle.styled\";\n\n\nexport default function LoginForm() {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(authOperations.logIn({ email, password }));\n        setEmail('');\n        setPassword('');\n    };\n\n    return (\n\n        <Container>\n            \n            <Helmet>\n                <title>Login Page</title>\n            </Helmet>\n\n            <BoxSx>\n            \n                <Form onSubmit={handleSubmit} autoComplete='off'>\n\n                    <InputsList>\n                        <Input>\n                            <TextField variant=\"outlined\" label=\"Email\" type=\"email\" name='email' value={email} onChange={handleChange} />\n                        </Input>\n                        <Input>\n                            <TextField variant=\"outlined\" label=\"Password\" type=\"password\" name='password' value={password} onChange={handleChange} />\n                        </Input>\n                    </InputsList>\n              \n                    <Button type=\"submit\" variant=\"contained\" startIcon={<LoginIcon />}>\n                        LogIn\n                    </Button>\n\n                </Form>\n            </BoxSx>\n        </Container>\n\n    );\n};"],"names":["BoxSx","children","sx","display","padding","textAlign","margin","marginTop","justifyContent","alignItems","width","height","backgroundColor","borderRadius","Form","styled","InputsList","Input","createContainer","LoginForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","Helmet","Box","onSubmit","e","preventDefault","authOperations","autoComplete","TextField","variant","label","type","onChange","Button","startIcon","Login"],"sourceRoot":""}